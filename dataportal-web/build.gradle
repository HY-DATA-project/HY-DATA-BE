plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.5'
    id 'io.spring.dependency-management' version '1.1.3'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
}

group = 'com.hanyang'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    runtimeOnly 'com.mysql:mysql-connector-j'

    implementation 'javax.mail:mail:1.4.7'
    implementation 'org.springframework:spring-context-support:5.3.9'

    implementation "com.querydsl:querydsl-jpa:5.0.0:jakarta"
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
}

def generated = 'src/main/generated'

querydsl {
    jpa = true
    querydslSourcesDir = generated
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}

def querydslTask = tasks.named('compileQuerydsl').getOrNull()
def initQuerydslSourcesDir = tasks.named('initQuerydslSourcesDir').getOrNull()

if (querydslTask && initQuerydslSourcesDir) {
    querydslTask.enabled = false
    initQuerydslSourcesDir.enabled = false
}

compileQuerydsl{
    options.annotationProcessorPath = configurations.querydsl
}

tasks.compileQuerydsl.dependsOn(clean)
tasks.compileJava.dependsOn(clean)

clean {
    delete file('src/main/generated')
}

