name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    
jobs:
  build:
    #빌드 환경은 ubuntu 최신 버전으로
    runs-on: ubuntu-latest

    steps:
    #CI 서버에 체크아웃
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        #temurin 배포본 Oracle JDK랑 동일
        distribution: 'temurin'
    
    - name: gradle set up
      uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

    - name: gradlew 권한 설정
      run: chmod +x gradlew

    - name: application.yml 생성
      run: |
        cd ./dataportal-web/src/main/resources
        touch ./application-prod.yml
        echo "${{ secrets.APPLICATION }}" > ./application-prod.yml
      shell: bash

    - name: 빌드 확인
      run: ./gradlew build

    - name: Docker set up
      uses: docker/setup-buildx-action@v1

    - name: Docker 이미지 빌드
      run: |
         docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
         docker build -t ${{ secrets.DOCKER_USERNAME }}/web:latest ./dataportal-web 
         docker push ${{ secrets.DOCKER_USERNAME }}/web:latest

    - name: 배포
      uses: appleboy/ssh-action@v0.1.8
      with:
        host: ${{secrets.AWS_HOST}}
        username: ubuntu
        key: ${{secrets.AWS_KEY}}
        port: 22
        script: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker stop $(docker ps -a -q)
          docker rm $(docker ps -a -q)
          docker rmi ${{ secrets.DOCKER_USERNAME }}/web:latest
          docker-compose up -d


